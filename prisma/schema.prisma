generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views", "fullTextSearchPostgres"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id       String        @id @default(cuid())
  fullName String
  type     TypeProfile   @default(USER)
  status   StatusProfile @default(ACTIVE)
  userId   String        @unique @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Revenue Revenue[]
  Expense Expense[]

  @@map("profiles")
}

model Revenue {
  id           String    @id @default(cuid())
  name         String
  description  String
  value        Float
  date_payment DateTime?

  type_payment TypePayment @default(PIX)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Profile   Profile? @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String?

  @@map("revenues")
}

model Expense {
  id           String    @id @default(cuid())
  name         String
  description  String
  value        Float
  date_payment DateTime?

  type_payment TypePayment @default(PIX)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Profile   Profile? @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String?

  @@map("expenses")
}

enum TypeProfile {
  ADMIN
  USER

  @@map("type_profiles")
}

enum StatusProfile {
  ACTIVE
  INACTIVE
  BLOCKED

  @@map("status_profiles")
}

enum TypePayment {
  PIX
  MONEY
  CREDIT_CARD
  TICKET

  @@map("type_payments")
}

view AuthUser {
  instance_id                 String?   @db.Uuid
  id                          String    @id @unique @db.Uuid
  aud                         String?   @db.VarChar(255)
  role                        String?   @db.VarChar(255)
  email                       String?   @db.VarChar(255)
  encrypted_password          String?   @db.VarChar(255)
  email_confirmed_at          DateTime? @db.Timestamptz(6)
  invited_at                  DateTime? @db.Timestamptz(6)
  confirmation_token          String?   @db.VarChar(255)
  confirmation_sent_at        DateTime? @db.Timestamptz(6)
  recovery_token              String?   @db.VarChar(255)
  recovery_sent_at            DateTime? @db.Timestamptz(6)
  email_change_token_new      String?   @db.VarChar(255)
  email_change                String?   @db.VarChar(255)
  email_change_sent_at        DateTime? @db.Timestamptz(6)
  last_sign_in_at             DateTime? @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime? @db.Timestamptz(6)
  updated_at                  DateTime? @db.Timestamptz(6)
  phone                       String?   @unique
  phone_confirmed_at          DateTime? @db.Timestamptz(6)
  phone_change                String?   @default("")
  phone_change_token          String?   @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime? @db.Timestamptz(6)
  confirmed_at                DateTime? @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?   @default("") @db.VarChar(255)
  email_change_confirm_status Int?      @default(0) @db.SmallInt
  banned_until                DateTime? @db.Timestamptz(6)
  reauthentication_token      String?   @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime? @db.Timestamptz(6)
  is_sso_user                 Boolean   @default(false)
  deleted_at                  DateTime? @db.Timestamptz(6)

  @@index([instance_id])
  @@map("auth_users")
}
